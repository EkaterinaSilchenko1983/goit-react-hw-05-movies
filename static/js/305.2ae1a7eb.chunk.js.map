{"version":3,"file":"static/js/305.2ae1a7eb.chunk.js","mappings":"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","sources":["components/API/Api.js","components/BackLink/BackLink.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst KEY = '3413619603c71871ad15e482a73e3df2';\n\nexport const getMovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n    if (response.data.results.length === 0) {\n      throw Error('Please, try againe!');\n    }\n    // console.log(response.data.results);\n    return response.data.results;\n  } catch (error) {\n    console.log(error.config);\n    if (error.response) {\n      throw Error('Ooops. Something went wrong... Try  again!');\n    } else if (error.request) {\n      throw Error('Ooops. Something went wrong... Try  again!');\n    } else {\n      throw error;\n    }\n  }\n};\n\nexport const getMovieById = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}?api_key=${KEY}&language=en-US`\n    );\n    if (response.data.length === 0) {\n      throw Error('No movies found!');\n    }\n    // console.log(response.data);\n\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      throw Error('Ooops. Something went wrong... Try  again!');\n    } else if (error.request) {\n      throw Error('Ooops. Something went wrong... Try  again!');\n    } else {\n      throw error;\n    }\n  }\n};\n\nexport const getCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n    );\n    if (!response.data.cast.length) {\n      throw Error('No casts found!');\n    }\n    // console.log(response.data.cast);\n\n    return response.data.cast;\n  } catch (error) {\n    if (error.response) {\n      throw Error('Ooops. Something went wrong... Try  again!');\n    } else if (error.request) {\n      throw Error('Ooops. Something went wrong... Try  again!');\n    } else {\n      throw error;\n    }\n  }\n};\n\nexport const getReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`\n    );\n    if (!response.data.results.length) {\n      throw Error('No reviews found!');\n    }\n    // console.log(response.data.results);\n\n    return response.data.results;\n  } catch (error) {\n    if (error.response) {\n      throw Error('Ooops. Something went wrong... Try  again!');\n    } else if (error.request) {\n      throw Error('Ooops. Something went wrong... Try  again!');\n    } else {\n      throw error;\n    }\n  }\n};\n\nexport const searchMovies = async searchQuery => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${KEY}&query=${searchQuery}&language=en-US&page=1&include_adult=false`\n    );\n    if (!response.data.results.length) {\n      throw Error('No movies found!!');\n    }\n\n    return response.data.results;\n  } catch (error) {\n    if (error.response) {\n      throw Error('Ooops. Something went wrong... Try  again!');\n    } else if (error.request) {\n      throw Error('Ooops. Something went wrong... Try  again!');\n    } else {\n      throw error;\n    }\n  }\n};\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  margin-left: 100px;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 40px;\n  padding-left: 100px;\n`;\nexport const TitleMovie = styled.h2`\n  font-size: 24px;\n  margin-bottom: 20px;\n`;\n\nexport const Paragraph = styled.p`\n  font-size: 18px;\n  margin-bottom: 20px;\n`;\nexport const TitleOverview = styled.h3`\n  font-size: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const WrapperInform = styled.div`\n  padding: 40px 0 40px 100px;\n  border-bottom: solid #e6b0aa;\n`;\n\nexport const ItemInform = styled.li`\n  padding-bottom: 10px;\n  font-size: 20px;\n\n  :hover {\n    text-decoration: underline;\n    color: #e6b0aa;\n  }\n`;\n// export const ListInform = styled.ul`\n//   padding-bottom: 10px;\n//   border-bottom: solid;\n// `;\n","import { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { BackLink } from '../../components/BackLink/BackLink';\nimport { useState, useEffect, Suspense } from 'react';\nimport { toast } from 'react-toastify';\n\nimport { getMovieById } from '../../components/API/Api';\nimport posterDefault from '../../img/posterMovie.png';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  ItemInform,\n  Paragraph,\n  TitleMovie,\n  TitleOverview,\n  Wrapper,\n  WrapperInform,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const fotoUrl = 'https://image.tmdb.org/t/p/w300';\n\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState([]);\n\n  useEffect(() => {\n    async function fetchMovieDetails() {\n      try {\n        const movieDetails = await getMovieById(movieId);\n\n        setMovieDetails(movieDetails);\n      } catch (error) {\n        toast(error.message);\n      }\n    }\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return (\n    <main>\n      <BackLink to={backLink}>Go back</BackLink>\n      <Wrapper>\n        <div>\n          <img\n            src={\n              movieDetails.poster_path\n                ? fotoUrl + movieDetails.poster_path\n                : posterDefault\n            }\n            width={300}\n            alt={movieDetails.title}\n          />\n        </div>\n\n        <div>\n          <TitleMovie>\n            {movieDetails.title} (\n            {movieDetails.release_date\n              ? movieDetails.release_date.slice(0, 4)\n              : ' No year'}\n            )\n          </TitleMovie>\n          <Paragraph>\n            User Score:{' '}\n            {movieDetails.vote_average\n              ? Math.floor(movieDetails.vote_average * 10).toFixed(0)\n              : ''}\n            %\n          </Paragraph>\n          <TitleOverview> Overview</TitleOverview>\n          <Paragraph>{movieDetails.overview}</Paragraph>\n          <TitleOverview>Genres</TitleOverview>\n          <Paragraph>\n            {movieDetails.genres\n              ? movieDetails.genres.map(genre => genre.name).join(' ')\n              : 'Genre not specified'}\n          </Paragraph>\n        </div>\n      </Wrapper>\n      <WrapperInform>\n        <TitleMovie>Additional information</TitleMovie>\n        <ul>\n          <ItemInform>\n            <Link to=\"cast\">Cast</Link>\n          </ItemInform>\n          <ItemInform>\n            <Link to=\"reviews\">Reviews</Link>\n          </ItemInform>\n        </ul>\n      </WrapperInform>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\nexport default MovieDetails;\n"],"names":["axios","KEY","getMovies","response","data","results","length","Error","console","log","config","request","getMovieById","movieId","getCast","cast","getReviews","searchMovies","searchQuery","StyledLink","styled","Link","BackLink","to","children","size","Wrapper","TitleMovie","Paragraph","TitleOverview","WrapperInform","ItemInform","backLink","useLocation","state","from","useParams","useState","movieDetails","setMovieDetails","useEffect","toast","message","fetchMovieDetails","src","poster_path","posterDefault","width","alt","title","release_date","slice","vote_average","Math","floor","toFixed","overview","genres","map","genre","name","join","Suspense","fallback","Loader"],"sourceRoot":""}