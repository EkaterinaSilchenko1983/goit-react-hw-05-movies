{"version":3,"file":"static/js/192.cd60e96a.chunk.js","mappings":"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","sources":["components/API/Api.js","components/MovieList/MovieList.js","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.js","pages/Movies.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst KEY = '3413619603c71871ad15e482a73e3df2';\n\nexport const getMovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n    if (response.data.results.length === 0) {\n      throw Error('Please, try againe!');\n    }\n    // console.log(response.data.results);\n    return response.data.results;\n  } catch (error) {\n    console.log(error.config);\n    if (error.response) {\n      throw Error('Ooops. Something went wrong... Try  again!');\n    } else if (error.request) {\n      throw Error('Ooops. Something went wrong... Try  again!');\n    } else {\n      throw error;\n    }\n  }\n};\n\nexport const getMovieById = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}?api_key=${KEY}&language=en-US`\n    );\n    if (response.data.length === 0) {\n      throw Error('No movies found!');\n    }\n    // console.log(response.data);\n\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      throw Error('Ooops. Something went wrong... Try  again!');\n    } else if (error.request) {\n      throw Error('Ooops. Something went wrong... Try  again!');\n    } else {\n      throw error;\n    }\n  }\n};\n\nexport const getCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n    );\n    if (!response.data.results.length) {\n      throw Error('No casts found!');\n    }\n    // console.log(response.data.cast);\n\n    return response.data.cast;\n  } catch (error) {\n    if (error.response) {\n      throw Error('Ooops. Something went wrong... Try  again!');\n    } else if (error.request) {\n      throw Error('Ooops. Something went wrong... Try  again!');\n    } else {\n      throw error;\n    }\n  }\n};\n\nexport const getReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`\n    );\n    if (!response.data.results.length) {\n      throw Error('No reviews found!');\n    }\n    // console.log(response.data.results);\n\n    return response.data.results;\n  } catch (error) {\n    if (error.response) {\n      throw Error('Ooops. Something went wrong... Try  again!');\n    } else if (error.request) {\n      throw Error('Ooops. Something went wrong... Try  again!');\n    } else {\n      throw error;\n    }\n  }\n};\n\nexport const searchMovies = async searchQuery => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${KEY}&query=${searchQuery}&language=en-US&page=1&include_adult=false`\n    );\n    if (!response.data.results.length) {\n      throw Error('No movies found!!');\n    }\n\n    return response.data.results;\n  } catch (error) {\n    if (error.response) {\n      throw Error('Ooops. Something went wrong... Try  again!');\n    } else if (error.request) {\n      throw Error('Ooops. Something went wrong... Try  again!');\n    } else {\n      throw error;\n    }\n  }\n};\n","import { Link, useLocation } from 'react-router-dom';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <div>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n// import { HiSearch } from 'react-icons/hi';\n\n// export const Icon = styled(HiSearch)`\n//   width: 20px;\n//   height: 20px;\n//   position: absolute;\n//   right: 6px;\n// `;\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  // border: none;\n  // outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://cdn-icons-png.flaticon.com/512/711/711319.png');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n","import { PropTypes } from 'prop-types';\n\nimport { Form, Wrapper, Input, Button } from '../SearchBox/SearchBox.styled';\n\nimport { useState } from 'react';\n\nexport const SearchBox = ({ onChange }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleInput = e => {\n    setSearchQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onChange(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <Wrapper>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          name=\"searchQuery\"\n          value={searchQuery}\n          placeholder=\"Search movies\"\n          autoComplete=\"off\"\n          autoFocus\n          onChange={handleInput}\n        />\n        <Button type=\"submit\"></Button>\n      </Form>\n    </Wrapper>\n  );\n};\n\nSearchBox.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n\n// export const SearchBox = ({ onSubmit }) => {\n//   return (\n//     <Wrapper>\n//       <Form onSubmit={onSubmit}>\n//         <Input\n//           type=\"text\"\n//           name=\"query\"\n//           placeholder=\"Search movies\"\n//           autoComplete=\"off\"\n//           autoFocus\n//         />\n//         <Button type=\"submit\"></Button>\n//       </Form>\n//     </Wrapper>\n//   );\n// };\n\n// SearchBox.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { searchMovies } from '../components/API/Api';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    async function getImage() {\n      setLoading(true);\n      try {\n        const movies = await searchMovies(searchQuery);\n        setMovies(movies);\n      } catch (error) {\n        toast(error.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getImage();\n  }, [searchQuery]);\n\n  const handleSubmit = query => {\n    setSearchParams(query !== '' ? { query } : {});\n  };\n\n  return (\n    <div>\n      {loading && <Loader />}\n      <SearchBox onChange={handleSubmit} />\n      {movies && <MovieList movies={movies} />}\n    </div>\n  );\n};\nexport default Movies;\n\n// import { useState, useEffect } from 'react';\n// import { useSearchParams } from 'react-router-dom';\n// import { toast } from 'react-toastify';\n\n// import { searchMovies } from '../components/API/Api';\n// import { SearchBox } from 'components/SearchBox/SearchBox';\n// import { MovieList } from 'components/MovieList/MovieList';\n// import { Loader } from 'components/Loader/Loader';\n\n// const Movies = () => {\n//   const [movies, setMovies] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [searchParams, setSearchParams] = useSearchParams();\n//   const query = searchParams.get('query');\n\n//   useEffect(() => {\n//     if (!query) {\n//       return;\n//     }\n\n//     async function getImage() {\n//       setLoading(true);\n//       try {\n//         const movies = await searchMovies(query);\n//         setMovies(movies);\n//       } catch (error) {\n//         toast(error.message);\n//       } finally {\n//         setLoading(false);\n//       }\n//     }\n//     getImage();\n//   }, [query]);\n\n//   const handleSubmit = evt => {\n//     evt.preventDefault();\n//     const form = evt.currentTarget;\n//     setSearchParams({ query: form.elements.query.value });\n//     form.reset();\n//     return;\n//   };\n\n//   return (\n//     <div>\n//       {loading && <Loader/>}\n//       <SearchBox onSubmit={handleSubmit} />\n//       {query && <MovieList movies={movies} />}\n//     </div>\n//   );\n// };\n// export default Movies;\n"],"names":["axios","KEY","getMovies","response","data","results","length","Error","console","log","config","request","getMovieById","movieId","getCast","cast","getReviews","searchMovies","searchQuery","MovieList","movies","location","useLocation","map","movie","to","id","state","from","title","Wrapper","styled","Input","Form","Button","SearchBox","onChange","useState","setSearchQuery","onSubmit","e","preventDefault","type","name","value","placeholder","autoComplete","autoFocus","target","setMovies","loading","setLoading","useSearchParams","searchParams","setSearchParams","get","useEffect","toast","message","getImage","Loader","query"],"sourceRoot":""}